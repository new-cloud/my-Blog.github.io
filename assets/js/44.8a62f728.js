(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{400:function(t,s,a){"use strict";a.r(s);var c=a(45),l=Object(c.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[t._v("#")]),t._v(" 运算符")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("JS 中操作符之间的优先级（高到低）:")]),t._v(" "),a("p",[t._v('算术操作符 → 比较操作符 → 逻辑操作符 → "="赋值符号')])]),t._v(" "),a("h2",{attrs:{id:"算术运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算术运算符"}},[t._v("#")]),t._v(" 算术运算符")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("+  -  *  /  %取余  ++自增  --\n++  数据在前为：先打印后自增 数据在后为：先自增后打印\n")])])])]),t._v(" "),a("h2",{attrs:{id:"赋值运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#赋值运算符"}},[t._v("#")]),t._v(" 赋值运算符：")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("=  +=  -=  *=  /=  %=\n")])])])]),t._v(" "),a("h2",{attrs:{id:"比较运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#比较运算符"}},[t._v("#")]),t._v(" 比较运算符")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v(">  <  >=  <=  ==(等于)  !=(不等于)  ===(全等于)  !==(不全等于)\n==  只是比较两个数据的值是否相等\n=== 不但比较两个数据的值是否相等，还要比较两个数据的类型是一样\n数值和字符串比较，字符串自动转换成数值\n字符串和字符串比较，比较的是数据的Unicode码，当首字母相同时往后比较\n")])])])]),t._v(" "),a("h2",{attrs:{id:"逻辑运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符"}},[t._v("#")]),t._v(" 逻辑运算符")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("&&并且  ||或者  ! 取反\n三目运算符：\n条件表达式 ? 表达式1（true结果1） ：表达式2（false结果2）\n")])])])]),t._v(" "),a("h2",{attrs:{id:"位运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#位运算符"}},[t._v("#")]),t._v(" 位运算符")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("按位与(&) 按位或(|) 按位右移(>>) 按位左移(<<)\n")])])])])])}),[],!1,null,null,null);s.default=l.exports}}]);